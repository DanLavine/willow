openapi: "3.0.0"

info:
  description: Limiter API
  title: Limiter
  version: poc 0.0.1

paths:
  /v1/limiter/rules:
    post:
      operationId: create Rule
      description: |
        `Rules` are the definied restrictive resource for the `Counters` API. Each `Rule` that matches against the `Counter.KeyValues`
        request is evaluated to ensure that the specific `Rule's` GroupBy selection has not hit the provided limit. It is importnat to
        note that if multiple `Rules` all match the same `Counter.KeyValues` then each `Rule` will be evaluated unless one fails which stops the processing

        There is special logic when a Rule has a Limit = 0. In this case the service will respond quickly rejecting the request saying the limit has been reached
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/RuleRequest"
      responses:
        201:
          description: Created the `Rule`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        422:
          description: Conflict if another rule already exists with the same Name or GroupBy keys
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    get:
      operationId: match Rules
      description: |
        List any Rules that match the particular `KeyValues` and their `Overrides`.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        description: |
          Matching will take all permutations of the provided `[rule | override search].KeyValues` and find
          all possible values that would match the `KeyValues` like a `Counters` request would.
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/RuleMatch"
      responses:
        200:
          description: Successfully searched for any rules that matched the query
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/ListRulesResponse"
        400:
          description: Error parsing or validating the request
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name:
    get:
      operationId: get Rule
      description: |
        Get the `Rule` by name and possible `Overrides`
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        description: |
          Matching will take all permutations of the provided `[rule | override search].KeyValues` and find
          all possible values that would match the `KeyValues` like a `Counters` request would.
        content:
          appplication/json:
            schema:
              type: object
              properties:
                OverridesToMatch:
                  description: |
                    Optional match query. Leaving this as empty on a request means to not include any `Overrides`
                  allOf:
                    - $ref: "../common/components.yaml#/components/schemas/MatchKeyValues"
      responses:
        200:
          description: |
            Retrieved a single Rule's specification
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/RuleResponse"
        400:
          description: Error parsing or validating the request parameters
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: The `Rule` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    put:
      operationId: update Rule
      description: |
        update a specific `Rule`.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/UpdateRuleRequest"
      responses:
        200:
          description: Successfully updated the `Rule`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: The original `Rule` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    delete:
      operationId: delete Rule
      description: |
        Delete a specific `Rule` and any `Overrides` associated with the rule
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      responses:
        204:
          description: Successfully deleted the `Rule` and all associatted `Overrides`
        500:
          description: Unexpected error service side
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name/overrides:
    post:
      operationId: create Override
      description: |
        Create a new `Override` for a set of `KeyValues`. If multiple `Overrides` have the exact same Name
        or `KeyValues`, then an API error will be returned.

        When matching a `Counter.KeyValues` and there are multiple `Overrides` that match, then each `Override`
        will be checked to ensure no limits are reached.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/RuleOverride"
      responses:
        201:
          description: Created a new `Override` for a given `Rule`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: returned if the `Rule` name cannot be found
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        422:
          description: Conflict if another `Override` already exists with the same KeyValues or Name
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    get:
      operationId: match Overrides
      description: |
        List any `Overrides` that match the particular `KeyValues`
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        description: |
          Matching will take all permutations of the provided `KeyValues` and find all
          possible values that would match the `Overrides` like a `Counters` request would.
        content:
          appplication/json:
            schema:
              $ref: "../common/components.yaml#/components/schemas/MatchKeyValues"
      responses:
        200:
          description: Successfully searched for any rules that matched the query
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/ListRulesResponse"
        400:
          description: Error parsing or validating the request
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name/overrides/:override_name:
    get:
      operationId: get Override
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      responses:
        200:
          description: Successfully found the desired `Override` for a `Rule`
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/RuleOverride"
        400:
          description: Error parsing or validating the request
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: The `Rule` or `Override` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    put:
      operationId: update Override
      description: |
        update a specific `Override`.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/UpdateOverrideRequest"
      responses:
        200:
          description: Successfully updated the `Override`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: The `Rule` or `Override` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    delete:
      operationId: delete Override
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      responses:
        204:
          description: deleted the Rule Override
        404:
          description: The `Rule` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/counters:
    put:
      operationId: upsert Counters
      description: |
        Create or Update a `Counter` which is a collection of `KeyValues`. If the `Counters` is positive, then the counters
        will be incremented and all `Rules` and their `Overrides` are matched to ensure that they have not reached a limit for
        the `KeyValues`. If that has happened, then the request will fail and it is up to the client to eventually retry the request.

        If the `Countres` is negative, then the counters will be decremented. If the total counters is less than or equal
        to 0 after the applied changes, the `Counter` is removed from the service
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/Counter"
      responses:
        200:
          description: Incremented the counter for the group of `KeyValues`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: Conflict if a particular `Rule's` limits are already reached
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/LimitReachedResponse"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    get:
      operationId: query Counters
      description: |
        Find any number of `Counters` that match the provided query.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "../common/components.yaml#/components/schemas/AssociatedKeyValuesQuery"
      responses:
        200:
          description: List of all counters that match the query
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/Counters"
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/counters/set:
    put:
      operationId: set Counters
      description: |
        Set a spcific `Counter` without checking or enforcinig any `Rules`. This API should only be used as
        part of a system onboarding experiance, or to clean up any processes which generate unique tags on
        startup and have crashed. In many systems such as these there is a single 'Repear' process to ensures
        the state of the world is eventually consistent and this api aims to make those operations easier.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/Counter"
      responses:
        200:
          description: Incremented the group of `KeyValues`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"

components:
  schemas:
    # List rules that match the provided key values
    RuleMatch:
      type: object
      required:
        - RulesToMach
      properties:
        RulesToMach:
          description: |
            `Rules` to find that match the KeyValues
          allOf: # need to use all of for the description to display properly
            - $ref: "../common/components.yaml#/components/schemas/MatchKeyValues"
        OverridesToMatch:
          description: |
            `Overrides` to find for any of the `Rules`. If this is empty, no overrides will be matched
          allOf:
            - $ref: "../common/components.yaml#/components/schemas/MatchKeyValues"

    # create a new rule request
    RuleRequest:
      type: object
      required:
        - Name
        - GroupBy
        - Limit
      properties:
        Name:
          description: "Name of the rule to create"
          type: string
        GroupBy:
          description: |
            GroupBy defines the Keys for any `Counters.KeyValues` that make a unique group matching the `Rule`.
          type: array
          items:
            type: string
        Limit:
          description: |
            Max limit for any Key Value Group. If this is set to -1, then the value is treated a 'unlimited'
          type: integer
          format: int64

    # Uppdate requests
    UpdateRuleRequest:
      type: object
      required:
        - Limit
      properties:
        Limit:
          type: integer
          format: int64
          description: |
            default limit that all `Rules` match `Counters.KeyValues` against. If this is set to -1, then the value is treated a 'unlimited'

    UpdateOverrideRequest:
      type: object
      required:
        - Limit
      properties:
        Limit:
          type: integer
          format: int64
          description: |
            default limit that all `Overrides` match `Counters.KeyValues` against. If this is set to -1, then the value is treated a 'unlimited'

    # Find rule response
    RuleResponse:
      type: object
      properties:
        Name:
          type: string
        GroupBy:
          type: array
          items:
            type: string
        Limit:
          type: integer
          format: int64
        Overrides:
          $ref: "#/components/schemas/RuleOverrides"

    ListRulesResponse:
      type: array
      items:
        $ref: "#/components/schemas/RuleResponse"

    # create a new rule request
    RuleOverride:
      type: object
      required:
        - Name
        - KeyValues
        - Limit
      properties:
        Name:
          description: "Name of the Override"
          type: string
        KeyValues:
          description: |
            The `KeyValues` must at a minimum include the `Rule's` GroupBy Keys with a Value.
          $ref: "../common/components.yaml#/components/schemas/KeyValues"
        Limit:
          description: |
            Limit to match `Overrides.KeyValues` against. If this is set to -1, then the value is treated a 'unlimited'
          type: integer
          format: int64

    RuleOverrides:
      type: array
      items:
        $ref: "#/components/schemas/RuleOverride"

    # incremenet response if a rule has already been reached
    LimitReachedResponse:
      type: object
      properties:
        RuleName:
          type: string
        Override:
          description: if an override was used to determine the limits reached
          type: object
          properties:
            KeyValues:
              $ref: "../common/components.yaml#/components/schemas/KeyValues"
            Limit:
              type: integer
              format: int64

    # increment or decrement counters request
    Counter:
      type: object
      required:
        - KeyValues
        - Counters
      properties:
        KeyValues:
          $ref: "../common/components.yaml#/components/schemas/KeyValues"
        Counters:
          description: |
            1. On incrment, increase the counters for the associated `KeyValues`.\
            2. On Decrement, decrease the counters for the associated `KeyValues`.\
            3. On set, these are forcefully setting the counters for the associated `KeyValues`.

            When ever updating the counters, if the count is less than or equal to 0, the counters
            is removed service side
          type: integer

    Counters:
      type: array
      items:
        $ref: "#/components/schemas/Counter"
