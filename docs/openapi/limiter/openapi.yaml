openapi: "3.0.0"

info:
  description: Limiter API
  title: Limiter
  version: poc 0.0.1

paths:
  /health:
    get:
      operationId: health check
      description: "API to check that the service is reachable"
      responses:
        200:
          description: "service is running fine"
  /v1/limiter/rules:
    post:
      operationId: create Rule
      description: |
        `Rules` are the definied restrictive resource for the `Counters` API. Each `Rule.GroupByKeyValues` that matches against the `Counter.KeyValues`
        request is evaluated to ensure that the specific `Rule.GroupByKeyValues` selection has not hit the provided limit. It is important to
        note that if multiple `Rules` all match the same `Counter`, then each `Rule` will be evaluated unless one fails which stops the processing
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/Rule"
      responses:
        201:
          description: Created the `Rule`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: Conflict if another rule already exists with the same Name or GroupBy keys
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/query:
    get:
      operationId: query Rules
      description: |
        List any `Rules` that match the provided query 
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        description: |
          Query for any possible `Rules`.
        content:
          appplication/json:
            schema:
              $ref: "../common/components.yaml#/components/schemas/AssociatedQuery"
      responses:
        200:
          description: Successfully searched for any rules that matched the query
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/Rules"
        400:
          description: Error parsing or validating the request
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/match:
    get:
      operationId: match Rules
      description: |
        match the provided KeyValues against the saved `Rules`. In this lookup, the `Rules` act as queries against
        the provided KeyValues to see if all the Rule.KeyValues properties are in the provided KeyValues.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "../common/components.yaml#/components/schemas/KeyValuesTyped"
      responses:
        200:
          description: Successfully searched for any rules that matched the KeyValues
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/Rules"
        400:
          description: Error parsing or validating the request
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name:
    get:
      operationId: get Rule
      description: |
        Get the `Rule` by name and possible `Overrides`
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      responses:
        200:
          description: |
            Retrieved a single Rule's specification
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/Rule"
        400:
          description: Error parsing or validating the request parameters
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: The `Rule` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The current `Rule` is being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    put:
      operationId: update Rule
      description: |
        update a specific `Rule`.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/UpdateRule"
      responses:
        200:
          description: Successfully updated the `Rule`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: The original `Rule` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The current `Rule` is being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    delete:
      operationId: delete Rule
      description: |
        Delete a specific `Rule` and any `Overrides` associated with the rule
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      responses:
        204:
          description: Successfully deleted the `Rule` and all associatted `Overrides`
        409:
          description: The current `Rule` is being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Unexpected error service side
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name/overrides:
    post:
      operationId: create Override
      description: |
        Create a new `Override` for a set of `KeyValues`. If multiple `Overrides` have the exact same Name
        or `KeyValues`, then an API error will be returned.

        When matching a `Counter.KeyValues` if a `Rule` has any `Overrides` that match, then the `Rule` itself will
        be ignored and the `Override` will take precedence. Also, if there are multiple `Overrides` that match, then 
        each `Override` will be checked to ensure no limits are reached.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/Override"
      responses:
        201:
          description: Created a new `Override` for a given `Rule`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: returned if the `Rule` name cannot be found
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: |
            Conflict if another `Override` already exists with the same KeyValues or Name. Could also be the `Rule`
            or current `Override` is currently being destroyed.
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name/overrides/query:
    get:
      operationId: list Overrides
      description: |
        List any `Overrides` that match the particular `KeyValues`
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        description: |
          Matching will take all permutations of the provided `KeyValues` and find all
          possible values that would match the `Overrides` like a `Counters` request would.
        content:
          appplication/json:
            schema:
              $ref: "../common/components.yaml#/components/schemas/AssociatedQuery"
      responses:
        200:
          description: Successfully searched for any rules that matched the query
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/Overrides"
        400:
          description: Error parsing or validating the request
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The current `Rule` is being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name/overrides/match:
    get:
      operationId: list Overrides
      description: |
        List any `Overrides` that match the particular `KeyValues`
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        description: |
          Matching will take all permutations of the provided `KeyValues` and find all
          possible values that would match the `Overrides` like a `Counters` request would.
        content:
          appplication/json:
            schema:
              $ref: "../common/components.yaml#/components/schemas/KeyValuesTyped"
      responses:
        200:
          description: Successfully searched for any rules that matched the query
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/Overrides"
        400:
          description: Error parsing or validating the request
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The current `Rule` is being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name/overrides/:override_name:
    get:
      operationId: get Override
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      responses:
        200:
          description: Successfully found the desired `Override` for a `Rule`
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/Override"
        404:
          description: The `Rule` or `Override` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The `Rule` or `Override` are being deleted
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    put:
      operationId: update Override
      description: |
        update a specific `Override`.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/UpdateOverride"
      responses:
        200:
          description: Successfully updated the `Override`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: The `Rule` or `Override` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The `Rule` or `Override` is currently being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    delete:
      operationId: delete Override
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      responses:
        204:
          description: deleted the Rule Override
        404:
          description: The `Rule` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The `Rule` or `Override` is currently being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/counters:
    put:
      operationId: upsert Counters
      description: |
        Create or Update a `Counter` which is a collection of `KeyValues`. If the `Counters` is positive, then the counters
        will be incremented and all `Rules` and their `Overrides` are matched to ensure that they have not reached a limit for
        the `KeyValues`. If that has happened, then the request will fail and it is up to the client to eventually retry the request.

        If the `Countres` is negative, then the counters will be decremented. If the total counters is less than or equal
        to 0 after the applied changes, the `Counter` is removed from the service
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/Counter"
      responses:
        200:
          description: Incremented the counter for the group of `KeyValues`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: Conflict if a particular `Rule` or `Override` Limit is already reached or would go over the Limit
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/counters/query:
    get:
      operationId: list Counters
      description: |
        Find any number of `Counters` that match the provided query.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "../common/components.yaml#/components/schemas/AssociatedQuery"
      responses:
        200:
          description: List of all counters that match the query
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/Counters"
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/counters/set:
    put:
      operationId: set Counters
      description: |
        Set a spcific `Counter` without checking or enforcinig any `Rules`. This API should only be used as
        part of a system onboarding experiance, or to clean up any processes which generate unique tags on
        startup and have crashed. In many systems such as these there is a single 'Repear' process to ensures
        the state of the world is eventually consistent and this api aims to make those operations easier.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/Counter"
      responses:
        200:
          description: Incremented the group of `KeyValues`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"

components:
  schemas:
    # Rule operations
    Rule:
      type: object
      required:
        - Name
        - GroupByKeyValues
        - Limit
        - Overrides
      properties:
        Name:
          description: "Name of the rule to create"
          type: string
        GroupByKeyValues:
          description: |
            GroupByKeyValues defines the KeyValues to match against `Counters.KeyValues`. As long as the `Counters.KeyValues`
            has all the KeyValue pairs defined in this `Rule`, then it is treated as a match.
          minLength: 1
          allOf:
            - $ref: "../common/components.yaml#/components/schemas/KeyValuesAny"
        Limit:
          description: |
            Max limit for any Key Value Group. If this is set to -1, then the value is treated a 'unlimited'
          type: integer
          format: int64
        Overrides:
          description: |
            Read only overides that are returned from some of the query apis.
          allOf:
            - $ref: "#/components/schemas/Overrides"

    Rules:
      type: array
      items:
        $ref: "#/components/schemas/Rule"

    UpdateRule:
      type: object
      required:
        - Limit
      properties:
        Limit:
          type: integer
          format: int64
          description: |
            default limit that all `Rules` match `Counters.KeyValues` against. If this is set to -1, then the value is treated a 'unlimited'

    # create a new rule request
    Override:
      type: object
      required:
        - Name
        - KeyValues
        - Limit
      properties:
        Name:
          description: "Name of the Override"
          type: string
        KeyValues:
          description: |
            The `KeyValues` must at a minimum include the `Rule's` GroupBy Keys with a Value.
          $ref: "../common/components.yaml#/components/schemas/KeyValuesAny"
        Limit:
          description: |
            Limit to match `Overrides.KeyValues` against. If this is set to -1, then the value is treated a 'unlimited'
          type: integer
          format: int64

    Overrides:
      type: array
      items:
        $ref: "#/components/schemas/Override"

    UpdateOverride:
      type: object
      required:
        - Limit
      properties:
        Limit:
          type: integer
          format: int64
          description: |
            default limit that all `Overrides` match `Counters.KeyValues` against. If this is set to -1, then the value is treated a 'unlimited'


    # Counter operations
    Counter:
      type: object
      required:
        - KeyValues
        - Counters
      properties:
        KeyValues:
          $ref: "../common/components.yaml#/components/schemas/KeyValuesTyped"
        Counters:
          description: |
            1. On incrment, increase the counters for the associated `KeyValues`.\
            2. On Decrement, decrease the counters for the associated `KeyValues`.\
            3. On set, these are forcefully setting the counters for the associated `KeyValues`.

            When ever updating the counters, if the count is less than or equal to 0, the counters
            is removed service side
          type: integer

    Counters:
      type: array
      items:
        $ref: "#/components/schemas/Counter"
