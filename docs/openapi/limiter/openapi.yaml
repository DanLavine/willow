openapi: "3.0.0"

info:
  description: Limiter API
  title: Limiter
  version: poc 0.0.2

paths:
  /health:      
    get:
      operationId: health check
      description: "API to check that the service is reachable"
      responses:
        200:
          description: "service is running fine"
  /v1/limiter/rules:
    post:
      operationId: create Rule
      description: |
        `Rules` are the definied restrictive resource for the `Counters` API. The `Rule.Spec.DBDefinitions.GroupByKeyValues`
        property defines an enforcement policy for all the `Counters.Spec.DBDefinitions.KeyValues` to adhear to. If the
        `Counters` contains all the KeyValue pairs defined by this `Rule`, then it counts against the Limit
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/Rule"
      responses:
        201:
          description: Created the `Rule`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: Conflict if another rule already exists with the same Name or GroupBy keys
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/query:
    get:
      operationId: query Rules
      description: |
        List any `Rules` that match the provided query 
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        description: |
          Query for any possible `Rules`.
        content:
          appplication/json:
            schema:
              $ref: "../common/components.yaml#/components/schemas/AssociatedQuery"
      responses:
        200:
          description: Successfully searched for any rules that matched the query
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/Rules"
        400:
          description: Error parsing or validating the request
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/match:
    get:
      operationId: match Rules
      description: |
        match the provided KeyValues against the saved `Rules`. In this lookup, the `Rules` act as queries against
        the provided KeyValues to see if all the Rule.KeyValues properties are in the provided KeyValues.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "../common/components.yaml#/components/schemas/MatchQuery"
      responses:
        200:
          description: Successfully searched for any rules that matched the KeyValues
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/Rules"
        400:
          description: Error parsing or validating the request
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name:
    get:
      operationId: get Rule
      description: |
        Get the `Rule` by name and possible `Overrides`
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      responses:
        200:
          description: |
            Retrieved a single Rule's specification
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/Rule"
        400:
          description: Error parsing or validating the request parameters
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: The `Rule` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The current `Rule` is being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    put:
      operationId: update Rule
      description: |
        update a specific `Rule`.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/RuleProperties"
      responses:
        200:
          description: Successfully updated the `Rule`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: The original `Rule` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The current `Rule` is being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    delete:
      operationId: delete Rule
      description: |
        Delete a specific `Rule` and any `Overrides` associated with the rule
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      responses:
        204:
          description: Successfully deleted the `Rule` and all associatted `Overrides`
        409:
          description: The current `Rule` is being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Unexpected error service side
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name/overrides:
    post:
      operationId: create Override
      description: |
        Create a new `Override` for a set of `KeyValues`. If multiple `Overrides` have the exact same Name
        or `KeyValues`, then an API error will be returned.

        When matching a `Counter.KeyValues` if a `Rule` has any `Overrides` that match, then the `Rule` itself will
        be ignored and the `Override` will take precedence. Also, if there are multiple `Overrides` that match, then 
        each `Override` will be checked to ensure no limits are reached.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/Override"
      responses:
        201:
          description: Created a new `Override` for a given `Rule`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: returned if the `Rule` name cannot be found
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: |
            Conflict if another `Override` already exists with the same KeyValues or Name. Could also be the `Rule`
            or current `Override` is currently being destroyed.
          content:
            appplication/json:
              schema:
                $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name/overrides/query:
    get:
      operationId: query Overrides
      description: |
        List any `Overrides` that match the particular `KeyValues`
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        description: |
          Matching will take all permutations of the provided `KeyValues` and find all
          possible values that would match the `Overrides` like a `Counters` request would.
        content:
          appplication/json:
            schema:
              $ref: "../common/components.yaml#/components/schemas/AssociatedQuery"
      responses:
        200:
          description: Successfully searched for any rules that matched the query
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/Overrides"
        400:
          description: Error parsing or validating the request
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The current `Rule` is being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name/overrides/match:
    get:
      operationId: match Overrides
      description: |
        List any `Overrides` that match the particular `KeyValues`
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        description: |
          Matching will take all permutations of the provided `KeyValues` and find all
          possible values that would match the `Overrides` like a `Counters` request would.
        content:
          appplication/json:
            schema:
              $ref: "../common/components.yaml#/components/schemas/MatchQuery"
      responses:
        200:
          description: Successfully searched for any rules that matched the query
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/Overrides"
        400:
          description: Error parsing or validating the request
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The current `Rule` is being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/rules/:rule_name/overrides/:override_name:
    get:
      operationId: get Override
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      responses:
        200:
          description: Successfully found the desired `Override` for a `Rule`
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/Override"
        404:
          description: The `Rule` or `Override` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The `Rule` or `Override` are being deleted
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    put:
      operationId: update Override
      description: |
        update a specific `Override`.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/OverrideProperties"
      responses:
        200:
          description: Successfully updated the `Override`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        404:
          description: The `Rule` or `Override` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The `Rule` or `Override` is currently being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
    delete:
      operationId: delete Override
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      responses:
        204:
          description: deleted the Rule Override
        404:
          description: The `Rule` could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: The `Rule` or `Override` is currently being destroyed
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/counters:
    put:
      operationId: upsert Counters
      description: |
        Create or Update a `Counter` which is a collection of `KeyValues`. If the `Counters` is positive, then the counters
        will be incremented and all `Rules` and their `Overrides` are matched to ensure that they have not reached a limit for
        the `KeyValues`. If that has happened, then the request will fail and it is up to the client to eventually retry the request.

        If the `Countres` is negative, then the counters will be decremented. If the total counters is less than or equal
        to 0 after the applied changes, the `Counter` is removed from the service
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/Counter"
      responses:
        200:
          description: Incremented the counter for the group of `KeyValues`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        409:
          description: Conflict if a particular `Rule` or `Override` Limit is already reached or would go over the Limit
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/counters/query:
    get:
      operationId: list Counters
      description: |
        Find any number of `Counters` that match the provided query.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "../common/components.yaml#/components/schemas/AssociatedQuery"
      responses:
        200:
          description: List of all counters that match the query
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/Counters"
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
  /v1/limiter/counters/set:
    put:
      operationId: set Counters
      description: |
        Set a spcific `Counter` without checking or enforcinig any `Rules`. This API should only be used as
        part of a system onboarding experiance, or to clean up any processes which generate unique tags on
        startup and have crashed. In many systems such as these there is a single 'Repear' process to ensures
        the state of the world is eventually consistent and this api aims to make those operations easier.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            enum: ["application/json"]
      requestBody:
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/Counter"
      responses:
        200:
          description: Incremented the group of `KeyValues`
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"
        500:
          description: Internal error that should be addressed by the service maintainer
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "../common/components.yaml#/components/schemas/ApiError"

components:
  schemas:
    # Rule operations
    Rules:
      type: array
      items:
        $ref: "#/components/schemas/Rule"

    Rule:
      type: object
      description: |
        `Rule.Spec.DBDefinitions.GroupByKeyValues` defines an enforcement policy for all the 
        `Counters.Spec.DBDefinitions.KeyValues` to adhear to. If they `Counters` contains
        all the KeyValue pairs defined by this `Rule`, then it counts against the Limit
      required:
        - Spec
      properties:
        Spec:
          type: object
          description: |
            Spec contains all the details on how to store the `Rule` in the DB and any properties
            that define the actions for a `Rule`
          required:
            - DBDefinition
            - Properties
          properties:
            DBDefinition:
              type: object
              description: |
                Specification for how to save the rule in the DB. Each of the fields must be unique
              required:
                - Name
                - GroupByKeyValues
              properties:
                Name:
                  type: string
                  description: |
                    Unique human readable name for the Rule. This is also the url encoded value for operations
                GroupByKeyValues:
                  $ref: "../common/db_definitions.yaml#/components/schemas/AnyKeyValues_Map"
            Properties:
              $ref: "#/components/schemas/RuleProperties"
        State:
          type: object
          readOnly: true
          description: |
            The State contains all the Read-Only details for the Rule that might be interesting to
          properties:
            Overrides:
              $ref: "#/components/schemas/Overrides"

    RuleProperties:
      type: object
      description: |
        Specification of all the fields for logical operation
      properties:
        Limit:
          type: integer
          format: int64
          description: |
            Total limit for `Counters` that can be created where any of their KeyValues make up
            those of the `Rule's` GroupByKeyValues

    # Overide operations
    Overrides:
      type: array
      items:
        $ref: "#/components/schemas/Override"

    Override:
      type: object
      description: |
        `Override` defines a custom enforcement policy for a `Rule`, overriding the Limts for possible `Counters` KeyValues.
        If they `Counters` contains at least the KeyValue pairs defined by this `Override`, then it counts against the Limit
      required:
        - Spec
      properties:
        Spec:
          type: object
          description: |
            Spec contains all the details on how to store the `Object` in the DB and any properties
            that define the actions for the `Override`
          required:
            - DBDefinition
            - Properties
          properties:
            DBDefinition:
              type: object
              description: |
                Specification for how to save the `Override` in the DB. Each of the fields must be unique
              required:
                - Name
                - GroupByKeyValues
              properties:
                Name:
                  type: string
                  description: |
                    Unique human readable name for the `Override`. This is also the url encoded value for action operations
                GroupByKeyValues:
                  description: |
                    The minimum number of GroupByKeyValues must match the parent's `Rule` GroupByKeyValues
                  allOf:
                    - $ref: "../common/db_definitions.yaml#/components/schemas/AnyKeyValues_Map"
            Properties:
              $ref: "#/components/schemas/RuleProperties"
        State:
          type: object
          readOnly: true
          description: |
            The State contains all the Read-Only details for the `Override` that might be interesting to
          properties:
            Deleting:
              type: boolean

    OverrideProperties:
      type: object
      description: |
        Specification of all the fields for logical operation
      properties:
        Limit:
          type: integer
          format: int64
          description: |
            Total limit for `Counters` that can be created where any of their KeyValues make up
            those of the `Overrides` GroupByKeyValues

    # Counter operations
    Counters:
      type: array
      items:
        $ref: "#/components/schemas/Counter"

    Counter:
      type: object
      description: |
        `Counter` contains all the KeyValues that are checkd against the enforcement policies for `Rules` and `Overrides`
      required:
        - Spec
      properties:
        Spec:
          type: object
          description: |
            Spec contains all the details on how to store the `Counter` in the DB and any properties
            that define the actions for the `Counter`
          required:
            - DBDefinition
            - Properties
          properties:
            DBDefinition:
              type: object
              description: |
                Specification for how to save the `Counter` in the DB. Each of the fields must be unique
              required:
                - KeyValues
              properties:
                KeyValues:
                  description: |
                    The KeyValues are match against the `Rule` and `Override` GroupByKeyValues. If all the KeyValue pairs
                    are present in the other enforcement object, it is considered a match. When adding the `Counter`, it
                    checks all other `Counters` to ensure we are under the Limits
                  allOf:
                    -  $ref: "../common/db_definitions.yaml#/components/schemas/TypedKeyValues_Map"
            Properties:
              type: object
              description: |
                Specification of all the logical operation fields
              required:
                - Counters
              properties:
                Counters:
                  type: integer
                  format: int64
                  description: |
                    1. On positive values, increase the counters for the associated `KeyValues`.\
                    2. On negative values, decrease the counters for the associated `KeyValues`.\
                    3. On set, these are forcefully setting the counters for the associated `KeyValues`.

                    When ever updating the counters, if the count is less than or equal to 0, the counters
                    is removed service side and removed from the DB
        State:
          type: object
          readOnly: true
          description: |
            The State contains all the Read-Only details for the `Override` that might be interesting to
          properties:
            Deleting:
              type: boolean