openapi: "3.0.0"

info:
  description: Limiter API
  title: Limiter
  version: a0.0.1

paths:
  /v1/limiter/rules/crerate:
    post:
      requestBody:
        description: |
          Create a new Limiter Rule.
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/CreateRuleRequest"
      responses:
        201:
          description: Created a new limiter rule
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/ApiError"
        422:
          description: Conflict if another rule already exists with the same name
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/ApiError"
  /v1/limiter/rules/find:
    get:
      description: |
        Delete a particualr rule and any overrides associated with the rule
      requestBody:
        description: |
          Find any rules that match the provided criteria.
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/FindRuleRequest"
      responses:
        200:
          description: Successfully searched for any rules that matched the query
          content:
            appplication/json:
              schema:
                $ref: "#/components/schemas/FindRuleResponse"
        400:
          description: Error parsing or validating the request
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/ApiError"
  /v1/limiter/rules/:name/update:
    post:
      requestBody:
        description: |
          update a limiter rule.
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/UpdateRuleRequest"
      responses:
        200:
          description: Successfully update the rule
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/ApiError"
        422:
          description: The original rule could not be found
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/ApiError"
  /v1/limiter/rules/:name/delete:
    delete:
      description: |
        Delete a particualr rule and any overrides associated with the rule
      responses:
        204:
          description: Successfully deleted the rule and all associatted overrides
  /v1/limiter/rules/:name/override:
    post:
      requestBody:
        description: |
          Create a new Override rule for a specifc set of Key Value pairs
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/CreateRuleOverrideRequest"
      responses:
        201:
          description: Created a new limiter rule
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/ApiError"
        422:
          description: Conflict if another rule overide already exists with the same key values
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/ApiError"
    delete:
      requestBody:
        description: |
          delete any rule overrides that match the provided query
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/AssociatedKeyValuesQuery"
      responses:
        201:
          description: Created a new limiter rule
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/ApiError"
        422:
          description: Conflict if another rule overide already exists with the same key values
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/ApiError"
  /v1/limiter/items/increment:
    post:
      requestBody:
        description: |
          Increment a particular group of key value pairs.
          TODO: does this request block if the keys cannot be incremented or does the client retry?
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/KeyValues"
      responses:
        201:
          description: Increment a group of Key Value Pairs
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/ApiError"
        409:
          description: Conflict if a particular rule's limits are already hit
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/LimitReachedResponse"
  /v1/limiter/items/decrement:
    delete:
      requestBody:
        description: |
          decrement a particular group of key value pairs.
        required: true
        content:
          appplication/json:
            schema:
              $ref: "#/components/schemas/KeyValues"
      responses:
        204:
          description: kkey values pair was decremeneted
        400:
          description: Error parsing or validating the request body
          content:
            appplication/json:
              schema:
                type: object
                properties:
                  ApiError:
                    $ref: "#/components/schemas/ApiError"

components:
  schemas:
    # General API errors
    ApiError:
      type: object
      properties:
        Error:
          type: string

    # General query thats used all over the place
    AssociatedKeyValuesQuery:
      type: object
      properties:
        KeyValueSelection:
          type: object
          $ref: "#/components/schemas/KeyValueSelection"
        OR:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/AssociatedKeyValuesQuery"
        AND:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/AssociatedKeyValuesQuery"

    KeyValueSelection:
      type: object
      properties:
        KeyValues:
          type: object
          $ref: "#/components/schemas/KeyValues"
        Limits:
          type: object
          properties:
            KeyLimits:
              type: integer

    # General Key Values of Encapsulated data
    KeyValues:
      type: object
      additionalProperties:
        title: KeyValues
        x-additionalPropertiesName: KeyValues
        $ref: "#/components/schemas/EncapsulatedData"

    # Generic data type wrapper for any Values in a Key Value pairing
    EncapsulatedData:
      type: object
      required:
        - DataType
        - Value
      properties:
        DataType:
          description: |
            Data type indicates how to parse the provided Value:\
            0: uint8\
            1: uint16\
            2: uint32\
            3: uint64\
            4: uint\
            5: int8\
            6: int16\
            7: int32\
            8: int64\
            9: int\
            10: float32\
            11: float64\
            12: string\
            13: nil
          type: integer
          enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
        Value:
          description: |
            Can be any value that is associated to the DataType
          type: object

    # create a new rule request
    CreateRuleRequest:
      type: object
      required:
        - Name
        - GroupBy
        - Limit
      properties:
        Name:
          description: "Name of the rule to create"
          type: string
        GroupBy:
          description: |
            GroupBy defines the keys for any Key + Value Pairs that make a unique pairing.
            These are matched on the /v1/items/increment api to know when limits are reached.
          type: array
          items:
            type: string
        Query:
          description: "Optional query to filter out unwanted Key + Value Pairs"
          $ref: "#/components/schemas/AssociatedKeyValuesQuery"
        Limit:
          type: integer
          format: uint64

    # Uppdate rule request
    UpdateRuleRequest:
      type: object
      required:
        - Limit
      properties:
        Limit:
          type: integer
          format: uint64
          description: default limit that all rules adhere to

    # Find rule request
    FindRuleRequest:
      type: object
      properties:
        Name:
          description: "Name of the rule to find"
          type: string
        KeyValues:
          $ref: "#/components/schemas/KeyValues"
        IncludeOverrides:
          type: boolean
          default: false
    # Find rule response
    FindRuleResponse:
      type: array
      items:
        type: object
        properties:
          Name:
            type: string
          GroupBy:
            type: array
            items:
              type: string
          Query:
            $ref: "#/components/schemas/AssociatedKeyValuesQuery"
          Limit:
            type: integer
            format: uint64
          RuleOverrides:
            type: array
            items:
              type: object
              properties:
                KeyValues:
                  $ref: "#/components/schemas/KeyValues"
                Limit:
                  type: integer
                  format: uint64

    # create a new rule request
    CreateRuleOverrideRequest:
      type: object
      required:
        - Name
        - KeyValues
        - Limit
      properties:
        Name:
          description: "Name of the override rule to create"
          type: string
        KeyValues:
          $ref: "#/components/schemas/KeyValues"
        Limit:
          type: integer
          format: uint64

    # incremenet response if a rule has already been reached
    LimitReachedResponse:
      type: object
      properties:
        RuleName:
          type: string
        Override:
          description: if an override was used to determine the limits reached
          type: object
          properties:
            KeyValues:
              $ref: "#/components/schemas/KeyValues"
            Limit:
              type: integer
              format: uint64
