components:
  schemas:

    # General API errors
    ApiError:
      type: object
      properties:
        Error:
          type: string

    # Match setup
    MatchQuery:
      type: object
      description: |
        Match is used to take all permutations of the provided KeyValues and match them against anything
        found in the database. A match is only found if all the keys of the item in the DB have the permutations
        of the KeyValues provided
      required:
        - KeyValues
      properties:
        KeyValues:
          type: object
          description: |
            All combination of possible KeyValue permutations will be used for these values provided
          additionalProperties:
            title: KeyValues
            x-additionalPropertiesName: KeyValues
            properties:
              Value:
                description: |
                  Encapsulated Value that defines how to parse the object on the service side
                oneOf:
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Uint8"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Uint16"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Uint32"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Uint64"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Uint"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Int8"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Int16"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Int32"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Int64"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Int"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Float32"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Float64"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/String"
                  - $ref: "./encapsulated_values.yaml#/components/schemas/Any"
              TypeRestrictions:
                $ref: "./db_definitions.yaml#/components/schemas/TypeRestrictions"
        MinNumberOfPermutationKeyValues:
          type: integer
          description: |
            Minimum Number of Keys that are required for items in the DB
        MaxNumberOfPermutationKeyValues:
          type: integer
          description: |
            Maximum number of Keys that will be used when matching items in the DB
    
    
    # assiciation setup
    AssociatedQuery:
      type: object
      description: |
        General query that is used for many list apis. When resolving the query,
        'and' operations have higher precedent than 'or'
      properties:
        Selections:
          $ref: "#/components/schemas/AssociatedQuerySelection"
        AND:
          type: array
          items:
            $ref: "#/components/schemas/AssociatedQuery"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AssociatedQuery"

    AssociatedQuerySelection:
      type: object
      description: |
        Query for a specifica collection of either:
        1. IDs - look for just known IDs in the DB
        2. KeyValues - any DB objects that contain the KeyValues
        3. IDs + KeyValues - any IDs that match the KeyValues
      properties:
        IDs:
          type: array
          description: |
            Iff IDs are provided, then any of the othe fields (KeyValues, MinNumberOfKeyValues, MaxNumberOfKeyValues)
            are used to enforce that the found IDs in the DB, would match a query against the other fields.
          items:
            type: string
        KeyValues:
          description: |
            Map of Keys with the specifics on what Values to search for
          additionalProperties:
            title: Key
            x-additionalPropertiesName: Key
            oneOf:
              - $ref: "#/components/schemas/AssociatedQueryEquals"
              - $ref: "#/components/schemas/AssociatedQueryNotEquals"
              - $ref: "#/components/schemas/AssociatedQueryLessThan"
              - $ref: "#/components/schemas/AssociatedQueryLessThanOrEqual"
              - $ref: "#/components/schemas/AssociatedQueryGreaterThan"
              - $ref: "#/components/schemas/AssociatedQueryGreaterThanOrEqual"
        MinNumberOfKeuValues:
          type: integer
          description: |
            Optional parameter that will enforce the min number of KeyValue pairs that make up an object in the DB
        MaxNumberOfKeyValues:
          type: integer
          description: |
            Optional parameter that will enforce the max number of KeyValue pairs that make up an object in the DB
          

    AssociatedQueryEquals:
      title: "Equals"
      type: object
      properties:
        Value:
          $ref: "./db_definitions.yaml#/components/schemas/AnyKeyValues"
        Comparison:
          type: string
          enum: ["="]
        TypeRestrictions:
          $ref: "./db_definitions.yaml#/components/schemas/TypeRestrictions"
    AssociatedQueryNotEquals:
      title: "Not Equals"
      type: object
      properties:
        Value:
          $ref: "./db_definitions.yaml#/components/schemas/AnyKeyValues"
        Comparison:
          type: string
          enum: ["!="]
        TypeRestrictions:
          $ref: "./db_definitions.yaml#/components/schemas/TypeRestrictions"
    AssociatedQueryLessThan:
      title: "Less Than"
      type: object
      properties:
        Value:
          $ref: "./db_definitions.yaml#/components/schemas/TypedKeyValues"
        Comparison:
          type: string
          enum: ["<"]
        TypeRestrictions:
          $ref: "./db_definitions.yaml#/components/schemas/TypeRestrictions"
    AssociatedQueryLessThanOrEqual:
      title: "Less Than Or Equal"
      type: object
      properties:
        Value:
          $ref: "./db_definitions.yaml#/components/schemas/TypedKeyValues"
        Comparison:
          type: string
          enum: ["<="]
        TypeRestrictions:
          $ref: "./db_definitions.yaml#/components/schemas/TypeRestrictions"
    AssociatedQueryGreaterThan:
      title: "Greater Than"
      type: object
      properties:
        Value:
          $ref: "./db_definitions.yaml#/components/schemas/TypedKeyValues"
        Comparison:
          type: string
          enum: [">"]
        TypeRestrictions:
          $ref: "./db_definitions.yaml#/components/schemas/TypeRestrictions"
    AssociatedQueryGreaterThanOrEqual:
      title: "Greater Than Or Equal"
      type: object
      properties:
        Value:
          $ref: "./db_definitions.yaml#/components/schemas/TypedKeyValues"
        Comparison:
          type: string
          enum: [">="]
        TypeRestrictions:
          $ref: "./db_definitions.yaml#/components/schemas/TypeRestrictions"

