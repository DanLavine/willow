// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DanLavine/willow/internal/limiter/rules (interfaces: Rule)

// Package rulesfakes is a generated GoMock package.
package rulesfakes

import (
	reflect "reflect"

	errors "github.com/DanLavine/willow/pkg/models/api/common/errors"
	v1 "github.com/DanLavine/willow/pkg/models/api/limiter/v1"
	gomock "go.uber.org/mock/gomock"
	zap "go.uber.org/zap"
)

// MockRule is a mock of Rule interface.
type MockRule struct {
	ctrl     *gomock.Controller
	recorder *MockRuleMockRecorder
}

// MockRuleMockRecorder is the mock recorder for MockRule.
type MockRuleMockRecorder struct {
	mock *MockRule
}

// NewMockRule creates a new mock instance.
func NewMockRule(ctrl *gomock.Controller) *MockRule {
	mock := &MockRule{ctrl: ctrl}
	mock.recorder = &MockRuleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRule) EXPECT() *MockRuleMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockRule) Delete() *errors.ServerError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete")
	ret0, _ := ret[0].(*errors.ServerError)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockRuleMockRecorder) Delete() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockRule)(nil).Delete))
}

// Limit mocks base method.
func (m *MockRule) Limit() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Limit")
	ret0, _ := ret[0].(int64)
	return ret0
}

// Limit indicates an expected call of Limit.
func (mr *MockRuleMockRecorder) Limit() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Limit", reflect.TypeOf((*MockRule)(nil).Limit))
}

// Update mocks base method.
func (m *MockRule) Update(arg0 *zap.Logger, arg1 *v1.RuleUpdateRquest) *errors.ServerError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(*errors.ServerError)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockRuleMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockRule)(nil).Update), arg0, arg1)
}
